import { AnalyticsRow } from "../../types/admin";
import { Audit } from "../../types/audits";
import { Compliance } from "../../types/compliance";
import { PluginRedux } from "../../types/plugins";
import { Team } from "../../types/teams";
import { Dictionary, RelationOneToOne } from "../../types/utilities";
export declare function convertAnalyticsRowsToStats(data: AnalyticsRow[], name: string): Dictionary<number | AnalyticsRow[]>;
declare const _default: import("redux").Reducer<import("redux").CombinedState<{
    logs: any;
    audits: Dictionary<Audit>;
    config: any;
    environmentConfig: any;
    complianceReports: Dictionary<Compliance>;
    clusterInfo: any;
    samlCertStatus: any;
    analytics: Dictionary<number | AnalyticsRow[]>;
    teamAnalytics: RelationOneToOne<Team, Dictionary<number | AnalyticsRow[]>>;
    userAccessTokensByUser: any;
    userAccessTokens: any;
    plugins: Dictionary<PluginRedux>;
    pluginStatuses: any;
    ldapGroups: any;
    ldapGroupsCount: any;
    samlMetadataResponse: any;
}>, import("redux").AnyAction>;
export default _default;
